name: CI

on:
  push:
    branches: [main, develop]
    paths:
      - '**.rs'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - '.github/workflows/**'
      - 'rustfmt.toml'
      - 'rust-toolchain.toml'

  pull_request:
    branches: [main]
    paths:
      - '**.rs'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - '.github/workflows/**'
      - 'rustfmt.toml'
      - 'rust-toolchain.toml'

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        run: |
          rustup show

      - name: Generate deps cache key
        id: deps-cache-key
        run: |
          # Create cache key from Cargo.lock, excluding only our package's version line
          # This preserves cache across version bumps but invalidates on dependency changes
          DEPS_HASH=$(awk '
            /^\[\[package\]\]/ { in_package=1 }
            in_package && /^name = "codecho"$/ { in_codecho=1 }
            in_package && /^version = / && in_codecho { next }  # Skip version line in codecho package
            in_package && /^$/ { in_package=0; in_codecho=0 }  # Reset at package end
            { print }  # Print all other lines
          ' Cargo.lock | sha256sum | cut -d' ' -f1)
          echo "deps-hash=${DEPS_HASH}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/debug/deps
            target/release/deps
          key: ${{ runner.os }}-cargo-deps-${{ steps.deps-cache-key.outputs.deps-hash }}
          restore-keys: ${{ runner.os }}-cargo-deps-

      - name: Check formatting
        if: matrix.os != 'windows-latest'
        run: cargo fmt -- --check

      - name: Run clippy
        run: cargo clippy -- -D warnings

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        run: |
          rustup show

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Run security audit
        run: cargo audit
